" ----- make Y consistent with D and C
nnoremap Y y$

" ----- tabs related
nnoremap <c-t> :tabnew<CR>
nnoremap gh gT
nnoremap gl gt

" ----- Navigation in insert mode
inoremap <c-b> <ESC>hli
inoremap <c-f> <ESC>lli
inoremap <c-e> <ESC>A

" ----- leader
map <space> \

command! SaveSession :mks!
nnoremap <leader>ss :SaveSession<CR>
nnoremap <Leader>r :call RenameFile()<cr>
nnoremap S i<CR><Esc>


" ----- find next
nnoremap <c-f> ;
vnoremap <c-f> ;

" ----- command mode shortcut
cnoremap <c-b> <Left>
cnoremap <c-f> <Right>
cnoremap <c-a> <C-b>

" ----- Search by default is global, when we use g, we actually toggled it
nnoremap / /\V
vnoremap / /\V
set nogdefault

" ----- Quick search do not make move, only search and high light
nnoremap * *``
nnoremap # *``

" save usint ctrl-s in insert mode
inoremap <c-s> <Esc>:w<CR>l
nnoremap <c-s> <Esc>:w<CR>
vnoremap <c-s> <Esc>:w<CR>

" change "" and '' back and force
nmap <leader>' cs"'
nmap <leader>" cs'"

" quit
nnoremap <c-q> :q<cr>

" windown manipulations
nnoremap <C-w><C-w> <C-w>v

" ----- permernent macros
" change ruby syntax
let @r = ';%s/:\(\w\+\)\(\s*\)=>/\1:/g'
" split arguments in brackets
let @s = 'f(lSf)SkV:s/, /,\r/g=i)  '

" -------------------- Plugins
" lastbuf
nnoremap <c-w><c-p> :LastBuf<CR>

" nerdtree
nmap <leader>o :NERDTreeFind<CR>

" command p
nmap <leader>p :CtrlPClearCache<CR>:CtrlP<CR>

" ----- Copy current path relative, absolute, filename
nnoremap cpa :let @+ = expand("%:p")<CR>
nnoremap cpr :let @+ = expand("%")<CR>
nnoremap cpn :let @+ = expand("%:t")<CR>

" ----- commentary
nmap <leader>c gcc
vmap <leader>c gc

set wrap

set colorcolumn=80
colorscheme seoul256

" ----- let . be a seperator
set iskeyword -=.

" ----- let switch ^ and 0
nnoremap 0 ^
nnoremap ^ 0

" ----- do not use swap file, do not show warnings
set noswapfile

" ----- Tabularize
map <leader>a :Tabularize /\V

unmap <leader>a::
map   <Leader>a:  :Tabularize /:\zs <CR>

unmap <Leader>a=>
map   <Leader>a=  :Tabularize /=<CR>

" ----- EasyMotion
let g:EasyMotion_do_mapping = 0 " Disable default mappings
nmap s <Plug>(easymotion-s)

" ----- syntastic
" disable html checker
let g:syntastic_html_checkers=['']

" ----- fugitive
nnoremap <silent> <leader>ga :Gwrite<CR>:w<CR>

" ----- neocomplete
let g:neocomplcache_enable_at_startup = 1
let g:neocomplcache_enable_auto_select = 1

" tab to expand, c-j to jump to next
imap <C-k> <Plug>(neosnippet_expand_or_jump)
imap <C-j> <Plug>(neosnippet_jump)
imap <expr><Tab> pumvisible() ? "\<C-n>\<C-k>" : "  "

inoremap <expr><Esc> pumvisible() ? "\<C-y>\<Esc><Right>" : "\<Esc>"
inoremap <Esc> <Esc>l

" ----- vim-airline
let g:airline_section_a = airline#section#create(['mode'])
let g:airline_section_y = airline#section#create(['%L'])
let g:airline#extensions#default#section_truncate_width = { 'x': 30, 'y': 30 }
let g:airline#extensions#default#layout = [
  \ ['a', 'c'],
  \ ['x', 'y', 'warning']
  \ ]
let g:airline_mode_map = {
  \ '__' : '-',
  \ 'n'  : 'N',
  \ 'i'  : 'I',
  \ 'R'  : 'R',
  \ 'c'  : 'C',
  \ 'v'  : 'V',
  \ 'V'  : 'V',
  \ '' : 'V',
  \ 's'  : 'S',
  \ 'S'  : 'S',
  \ '' : 'S',
  \ }
